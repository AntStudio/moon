<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="   
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd 
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	
	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="/WEB-INF/config/DBPool.properties" />
	
  <cache:annotation-driven cache-manager="cacheManager"/>  
  
  <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
	     p:cacheManager-ref="cacheManagerFactory"/>
	     
	     	<bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
         p:configLocation="/WEB-INF/config/ehcache.xml"/>
         
	     
	<!--bean id="paginationEvents" class="com.reeham.component.webbiz.events.PaginationEvents"/>-->
	<bean id="introduceCreator" class="com.reeham.component.ddd.autoproxy.IntroduceAutoProxyCreator">
	  <property name="optimize" value="true"></property>
	  <property name="frozen" value="true"></property>
	</bean>
	

	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxIdle" value="${maxIdle}" />
		<property name="minIdle" value="${minIdle}" />
	</bean>


   <bean id="proxoolDataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
            <property name="driver" value="${driver}"/>
            <property name="driverUrl" value="${url}"/>
            <property name="user" value="${username}"/>
            <property name="password" value="${password}"/>
            <!-- 测试的SQL执行语句 -->
           <property name="houseKeepingTestSql" value="${testSql}"/>
            <!-- 最少保持的空闲连接数 （默认2个） -->
             <property name="prototypeCount" value="${initialSize}"/>
            <!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒） -->
            <!-- <property name="houseKeepingSleepTime" value="${hourseKeepingSleepTime}"/> -->
            <!-- 最大活动时间(超过此时间线程将被kill,默认为5分钟) -->
             <property name="maximumActiveTime" value="${maxActive}"/>
            <!-- 最小连接数 （默认2个） -->
            <property name="minimumConnectionCount" value="${minIdle}"/>
            <!-- 最大连接数 （默认5个） -->
            <property name="maximumConnectionCount" value="${maxIdle}"/>
     </bean>
     
<!-- the sessionFactory for mybatis -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="/WEB-INF/config/MyBatis-Configuration.xml"></property>
        <property name="dataSource" ref="proxoolDataSource" />
    </bean>
    
<!-- the sessionFactory for hibernate 
<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="proxoolDataSource" />
		<property name="packagesToScan">
			<list>
				<value>test.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
		    <value>
			  hibernate.dialect=${hibernate.dialect}
			  hibernate.show_sql=${hibernate.show_sql}
			  hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
			</value>
		</property>
	</bean>
	 -->
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="proxoolDataSource" />
		</property>
	</bean>


<bean id="menuRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.antstudio.rbac.repository.MenuRepository"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
    <bean id="userRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.antstudio.rbac.repository.UserRepository"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
     <bean id="roleRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.antstudio.rbac.repository.RoleRepository"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
     <bean id="permissionRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.antstudio.rbac.repository.PermissionRepository"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
       <bean id="logRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.antstudio.log.repository.LogRepository"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
    <bean id="tableCreatorRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.antstudio.base.init.repository.TableCreatorRepository"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
     <bean id="dbManagerRepository" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.antstudio.db.manager.repository.DBManagerRepository"></property>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="proxoolDataSource"/>
    </bean>
    
 
	
	<aop:aspectj-autoproxy />
	 <tx:annotation-driven />
</beans> 